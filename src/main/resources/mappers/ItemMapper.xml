<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.todoapp.mapper.ItemMapper">
  <resultMap id="itemMap" type="com.example.todoapp.model.Item">
    <id property="itemId" column="id" />
    <id property="loginId" column="loginId" />
    <result property="itemName" column="name" />
    <result property="itemCategory" column="category" />
  </resultMap>
  <select id="findAll" resultMap="itemMap"> SELECT * FROM items left outer join users on
    items.user_id = users.id where users.login_id=#{loginId} </select>
  <select id="findOneById" resultMap="itemMap"> SELECT * FROM items left outer join users on
    items.user_id = users.id where users.login_id=#{loginId} and items.id = #{itemId} </select>
  <delete id="deleteOneById">delete from items where id = #{itemId}</delete>
  <insert id="addOne" parameterType="com.example.todoapp.model.Item"> INSERT INTO items (id, name,
    category, user_id) VALUES (gen_random_uuid(), #{item.itemName}, #{item.itemCategory}, (select id
    from users where login_id = #{loginId}) ) </insert>
  <update id="updateOne" parameterType="map"> UPDATE items SET id = #{item.itemId}, name =
    #{item.itemName}, category = #{item.itemCategory} WHERE id = #{itemId}</update>
</mapper>